// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Correlationc
arma::mat Correlationc(const arma::mat& coordsx, const arma::mat& coordsy, const arma::vec& theta, int matern, bool same);
RcppExport SEXP _spSeparable_Correlationc(SEXP coordsxSEXP, SEXP coordsySEXP, SEXP thetaSEXP, SEXP maternSEXP, SEXP sameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type coordsx(coordsxSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type coordsy(coordsySEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type matern(maternSEXP);
    Rcpp::traits::input_parameter< bool >::type same(sameSEXP);
    rcpp_result_gen = Rcpp::wrap(Correlationc(coordsx, coordsy, theta, matern, same));
    return rcpp_result_gen;
END_RCPP
}
// daggp_build
Rcpp::List daggp_build(const arma::mat& coords, const arma::field<arma::uvec>& dag, double phi, double sigmasq, double nu, double tausq, int matern, int num_threads, bool prune_dag);
RcppExport SEXP _spSeparable_daggp_build(SEXP coordsSEXP, SEXP dagSEXP, SEXP phiSEXP, SEXP sigmasqSEXP, SEXP nuSEXP, SEXP tausqSEXP, SEXP maternSEXP, SEXP num_threadsSEXP, SEXP prune_dagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::uvec>& >::type dag(dagSEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type sigmasq(sigmasqSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type tausq(tausqSEXP);
    Rcpp::traits::input_parameter< int >::type matern(maternSEXP);
    Rcpp::traits::input_parameter< int >::type num_threads(num_threadsSEXP);
    Rcpp::traits::input_parameter< bool >::type prune_dag(prune_dagSEXP);
    rcpp_result_gen = Rcpp::wrap(daggp_build(coords, dag, phi, sigmasq, nu, tausq, matern, num_threads, prune_dag));
    return rcpp_result_gen;
END_RCPP
}
// spseparable_response
Rcpp::List spseparable_response(const arma::mat& Y, const arma::mat& coords, const arma::field<arma::uvec>& custom_dag, arma::vec theta_start, arma::vec sampling, const arma::mat& Sigma_start, int mcmc, int print_every, int dag_opts, bool upd_Sigma, bool upd_theta, int num_threads);
RcppExport SEXP _spSeparable_spseparable_response(SEXP YSEXP, SEXP coordsSEXP, SEXP custom_dagSEXP, SEXP theta_startSEXP, SEXP samplingSEXP, SEXP Sigma_startSEXP, SEXP mcmcSEXP, SEXP print_everySEXP, SEXP dag_optsSEXP, SEXP upd_SigmaSEXP, SEXP upd_thetaSEXP, SEXP num_threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::uvec>& >::type custom_dag(custom_dagSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_start(theta_startSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sampling(samplingSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sigma_start(Sigma_startSEXP);
    Rcpp::traits::input_parameter< int >::type mcmc(mcmcSEXP);
    Rcpp::traits::input_parameter< int >::type print_every(print_everySEXP);
    Rcpp::traits::input_parameter< int >::type dag_opts(dag_optsSEXP);
    Rcpp::traits::input_parameter< bool >::type upd_Sigma(upd_SigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type upd_theta(upd_thetaSEXP);
    Rcpp::traits::input_parameter< int >::type num_threads(num_threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(spseparable_response(Y, coords, custom_dag, theta_start, sampling, Sigma_start, mcmc, print_every, dag_opts, upd_Sigma, upd_theta, num_threads));
    return rcpp_result_gen;
END_RCPP
}
// spseparable_logdens
double spseparable_logdens(const arma::mat& Y, const arma::mat& coords, const arma::field<arma::uvec>& custom_dag, arma::vec theta, const arma::mat& Sigma);
RcppExport SEXP _spSeparable_spseparable_logdens(SEXP YSEXP, SEXP coordsSEXP, SEXP custom_dagSEXP, SEXP thetaSEXP, SEXP SigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< const arma::field<arma::uvec>& >::type custom_dag(custom_dagSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sigma(SigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(spseparable_logdens(Y, coords, custom_dag, theta, Sigma));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_spSeparable_Correlationc", (DL_FUNC) &_spSeparable_Correlationc, 5},
    {"_spSeparable_daggp_build", (DL_FUNC) &_spSeparable_daggp_build, 9},
    {"_spSeparable_spseparable_response", (DL_FUNC) &_spSeparable_spseparable_response, 12},
    {"_spSeparable_spseparable_logdens", (DL_FUNC) &_spSeparable_spseparable_logdens, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_spSeparable(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
